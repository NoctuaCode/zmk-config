/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        behaviors {
          tp: tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_PREFERRED";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <100>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
          }; 
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | TAB  | SEMI | COMMA | DOT |  P  |  Y  |   |  F  |  G   |  C  |  R  |  L  |  /  |
// | ESC  |  A   |   O   |  E  |  U  |  I  |   |  D  |  H   |  T  |  N  |  S  |  -  |
// | SHFT |  '   |   Q   |  J  |  K  |  X  |   |  B  |  M   |  W  |  V  |  Z  |  \  |
//                       |  1  | RET | SPC |   | BSPC| DEL  |  2  |
                        bindings = <
   &kp TAB                    &kp SEMI    &kp COMMA   &kp DOT      &kp P        &kp Y                      &kp F                &kp G        &kp C        &kp R       &kp L       &kp FSLH
   &tp LG(LA(LC(LSHFT))) ESC  &tp LGUI A  &tp LALT O  &tp LSHFT E  &tp LCTRL U  &tp LA(LC(LSHFT)) I        &tp LA(LC(LSHFT)) D  &tp RCTRL H  &tp RSHFT T  &tp LALT N  &tp RGUI S  &tp LG(LA(LC(LSHFT))) MINUS
   &kp LSHFT                  &kp SQT     &kp Q       &kp J        &kp K        &kp X                      &kp B                &kp M        &kp W        &kp V       &kp Z       &kp BSLH
                                                      &kp RET      &kp SPACE    &mo 1                      &mo 2                &kp BSPC     &kp DEL
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// | BTCLR |  BT1  |  BT2  |  BT3  |  BT4  |  BT5  |   |       | HOME  |   UP  |  END  | PGUP  |       |
// | HYPER |   1   |   2   |   3   |   4   |   5   |   |   6   |   7   |   8   |   9   |   0   | HYPER |
// |  F1   |  F2   |  F3   |  F4   |  F5   |  F6   |   |  F7   |  F8   |  F9   |  F10  |  F11  |  F12  |
//                         |       |       |       |   |       |       |       |
                        bindings = <
   &bt BT_CLR             &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4             &kp LS(MINUS)         &kp DOT       &kp COMMA     &kp COLON    &kp SEMI     &kp MINUS
   &kp LG(LA(LC(LSHFT)))  &tp LGUI N1   &tp LALT N2   &tp LSHFT N3  &tp LCTRL N4  &tp LA(LC(LSHFT)) N5     &tp LA(LC(LSHFT)) N6  &tp RCTRL N7  &tp RSHFT N8  &tp LALT N9  &tp LGUI N0  &kp LG(LA(LC(LSHFT)))
   &kp F1                 &kp F2        &kp F3        &kp F4        &kp F5        &kp F6                   &kp F7                &kp F8        &kp F9        &kp F10      &kp F11      &kp F12
                                                      &trans        &trans        &trans                   &trans                &trans        &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  `  |  !  |  @  |  [  |  ]  |  ^  |    |  .  | HOME |  UP  |  END  |  *  |     |
// |  ~  |  #  |  $  |  (  |  )  |  &  |    |  +  | LEFT | DOWN | RIGHT |  =  |     |
// |  :  |  <  |  >  |  {  |  }  |  "  |    |  ,  | PGUP | PSCRN| PGDN  |  %  |     |
//                   |     |  0  |     |    |     |      |      |
                        bindings = <
   &kp GRAVE                    &kp EXCL       &kp AT         &kp LBKT        &kp RBKT        &kp CARET                    &kp DOT                  &kp HOME        &kp UP          &kp END         &kp ASTRK       &trans
   &tp LG(LA(LC(LSHFT))) TILDE  &tp LGUI HASH  &tp LALT DLLR  &tp LSHFT LPAR  &tp LCTRL RPAR  &tp LA(LC(LSHFT)) AMPS       &tp LA(LC(LSHFT)) PLUS   &tp RCTRL LEFT  &tp RSHFT DOWN  &tp LALT RIGHT  &tp RGUI EQUAL  &tp LG(LA(LC(LSHFT))) MINUS
   &kp COLON                    &kp LT         &kp GT         &kp LBRC        &kp RBRC        &kp DQT                      &kp COMMA                &kp PG_UP       &kp PSCRN       &kp PG_DN       &kp PRCNT       &trans
                                                              &trans          &kp N0          &trans                       &trans                   &trans          &trans
                        >;
                };
        };
};
