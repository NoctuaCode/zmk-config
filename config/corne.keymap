/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        tp: tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_PREFERRED";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <100>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // | TAB  |  Q   |  W   |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |  -  |
            // | ESC  |  A   |  S   |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '  |
            // | SHFT |  Z   |  X   |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |  \  |
            //                       |  1  | RET | SPC |   | BSPC| DEL  |  2  |

            bindings = <
&kp TAB                  &kp B  &kp Y  &kp O                     &kp U            &kp SEMI       &kp APOS            &kp L         &kp D             &kp W  &kp V  &kp Z
&tp LEFT_CONTROL ESCAPE  &kp C  &kp I  &kp E                     &kp A            &kp COMMA      &kp DOT             &kp H         &kp T             &kp N  &kp S  &tp LCTRL Q
&sl 1                    &kp G  &kp X  &kp J                     &kp K            &kp MINUS      &kp FSLH            &kp R         &kp M             &kp F  &kp P  &sl 1
                                       &kp LS(LG(LC(LEFT_ALT)))  &tp LSHFT SPACE  &lt 2 ENTER    &tp LGUI BACKSPACE  &tp LALT DEL  &kp LS(LC(LALT))
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |       |   1   |   2   |   3   |   4   |   5   |   |   6   |   7   |   8   |   9   |   0   |       |
            // |  F1   |  F2   |  F3   |  F4   |  F5   |  F6   |   |  F7   |  F8   |  F9   |  F10  |  F11  |  F12  |
            // | BTCLR |  BT1  |  BT2  |  BT3  |  BT4  |  BT5  |   |       |       |       |       |       |       |
            //                         |       |       |       |   |       |       |       |

            bindings = <
&tp LA(LC(LG(LSHFT))) DEL      &kp F1  &kp F2   &kp F3   &kp F4   &bt BT_SEL 0    &trans         &kp HOME    &kp UP        &kp END     &kp PG_UP  &bt BT_CLR
&tp LA(LC(LSHFT)) PRINTSCREEN  &kp F5  &kp F6   &kp F7   &kp F8   &bt BT_SEL 1    &kp C_BRI_DEC  &kp LEFT    &kp DOWN      &kp RIGHT   &kp PG_DN  &kp C_BRIGHTNESS_INC
&trans                         &kp F9  &kp F10  &kp F11  &kp F12  &bt BT_SEL 2    &kp C_VOL_DN   &kp C_MUTE  &kp C_VOL_UP  &kp C_PREV  &kp C_PP   &kp C_NEXT
                                                &trans   &trans   &trans          &trans         &trans      &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  `  |  !  |  @  |  [  |  ]  |  ^  |    |  .  | HOME |  UP  |  END  |  *  |     |
            // |  ~  |  #  |  $  |  (  |  )  |  &  |    |  +  | LEFT | DOWN | RIGHT |  =  |     |
            // |  :  |  <  |  >  |  {  |  }  |  "  |    |  ,  | PGUP | PSCRN| PGDN  |  %  |     |
            //                   |     |  0  |     |    |     |      |      |

            bindings = <
&tp LA(LC(LG(LSHFT))) GRAVE  &kp EXCL    &kp HASH     &kp LBRC  &kp RBRC  &kp AMPS           &kp ASTERISK  &kp N7  &kp N8  &kp N9  &kp COMMA  &kp FSLH
&tp LA(LC(LSHFT)) TILDE      &kp DOLLAR  &kp AT_SIGN  &kp LPAR  &kp RPAR  &kp PERCENT        &kp EQUAL     &kp N4  &kp N5  &kp N6  &kp N0     &tp LEFT_GUI MINUS
&kp PIPE                     &kp LT      &kp CARET    &kp LBKT  &kp RBKT  &kp GT             &kp PLUS      &kp N1  &kp N2  &kp N3  &kp DOT    &kp BSLH
                                                      &trans    &trans    &tp LCTRL SPACE    &trans        &trans  &trans
            >;
        };
    };
};
