/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        tp: tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_PREFERRED";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <100>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // | TAB  |  Q   |  W   |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |  -  |
            // | ESC  |  A   |  S   |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '  |
            // | SHFT |  Z   |  X   |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |  \  |
            //                       |  1  | RET | SPC |   | BSPC| DEL  |  2  |

            bindings = <
&kp TAB     &kp Q       &kp W       &kp E              &kp R        &kp T        &kp Y      &kp U        &kp I                  &kp O       &kp P          &kp MINUS
&kp ESCAPE  &tp LGUI A  &tp LALT S  &tp LSHFT D        &tp LCTRL F  &kp G        &kp H      &tp LCTRL J  &tp LSHFT K            &tp LALT L  &tp LGUI SEMI  &kp SQT
&to 4       &kp Z       &kp X       &kp C              &kp V        &kp B        &kp N      &kp M        &kp COMMA              &kp DOT     &kp FSLH       &kp BSLH
                                    &kp LA(LC(LSHFT))  &lt 3 SPACE  &lt 1 RET    &lt 2 DEL  &kp BSPC     &kp LA(LC(LG(LSHFT)))
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |       |   1   |   2   |   3   |   4   |   5   |   |   6   |   7   |   8   |   9   |   0   |       |
            // |  F1   |  F2   |  F3   |  F4   |  F5   |  F6   |   |  F7   |  F8   |  F9   |  F10  |  F11  |  F12  |
            // | BTCLR |  BT1  |  BT2  |  BT3  |  BT4  |  BT5  |   |       |       |       |       |       |       |
            //                         |       |       |       |   |       |       |       |

            bindings = <
&kp F1      &kp F2        &kp F3        &kp F4        &kp F5        &kp F6          &kp F7  &kp F8        &kp F9        &kp F10      &kp F11      &kp F12
&trans      &tp LGUI N1   &tp LALT N2   &tp LSHFT N3  &tp LCTRL N4  &kp N5          &kp N6  &tp LCTRL N7  &tp LSHFT N8  &tp LALT N9  &tp LGUI N0  &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans        &trans        &trans       &trans       &trans
                                        &trans        &trans        &trans          &trans  &trans        &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  `  |  !  |  @  |  [  |  ]  |  ^  |    |  .  | HOME |  UP  |  END  |  *  |     |
            // |  ~  |  #  |  $  |  (  |  )  |  &  |    |  +  | LEFT | DOWN | RIGHT |  =  |     |
            // |  :  |  <  |  >  |  {  |  }  |  "  |    |  ,  | PGUP | PSCRN| PGDN  |  %  |     |
            //                   |     |  0  |     |    |     |      |      |

            bindings = <
&trans  &trans         &kp MINUS    &kp LBKT        &kp RBKT        &trans       &trans     &kp EQUAL       &kp GT           &kp TILDE      &trans         &trans
&trans  &tp LGUI EXCL  &tp LALT AT  &tp LSHFT HASH  &tp LCTRL DLLR  &kp PRCNT    &kp CARET  &tp LCTRL AMPS  &tp LSHFT ASTRK  &tp LALT LPAR  &tp LGUI RPAR  &trans
&trans  &trans         &kp UNDER    &kp LBRC        &kp RBRC        &trans       &trans     &kp PLUS        &kp LT           &kp GRAVE      &trans         &trans
                                    &trans          &trans          &trans       &trans     &trans          &trans
            >;
        };

        arrow_layer {
            // -----------------------------------------------------------------------------------------
            // |  `  |  !  |  @  |  [  |  ]  |  ^  |    |  .  | HOME |  UP  |  END  |  *  |     |
            // |  ~  |  #  |  $  |  (  |  )  |  &  |    |  +  | LEFT | DOWN | RIGHT |  =  |     |
            // |  :  |  <  |  >  |  {  |  }  |  "  |    |  ,  | PGUP | PSCRN| PGDN  |  %  |     |
            //                   |     |  0  |     |    |     |      |      |

            bindings = <
&trans  &kp C_BRIGHTNESS_INC  &kp C_PREV    &kp C_PLAY_PAUSE  &kp C_NEXT    &trans    &trans  &kp HOME        &kp UP          &kp END         &kp PG_UP       &trans
&trans  &kp LGUI              &kp LALT      &kp LSHFT         &kp LCTRL     &trans    &trans  &tp LCTRL LEFT  &tp LSHFT DOWN  &tp LALT RIGHT  &tp LGUI PG_DN  &trans
&trans  &kp C_BRIGHTNESS_DEC  &kp C_VOL_DN  &kp C_MUTE        &kp C_VOL_UP  &trans    &trans  &trans          &trans          &trans          &trans          &trans
                                            &trans            &trans        &trans    &trans  &trans          &trans
            >;
        };

        layer_3 {
            bindings = <
&mt LCMD TAB      &kp Q  &kp W  &kp E      &kp R      &kp T        &kp Y    &kp U     &kp I         &kp O    &kp P     &kp SQT
&mt LSHFT ESCAPE  &kp A  &kp S  &kp D      &kp F      &kp G        &kp H    &kp J     &kp K         &kp L    &kp SEMI  &kp MINUS
&to 0             &kp Z  &kp X  &kp C      &kp V      &kp B        &kp N    &kp M     &kp COMMA     &kp DOT  &kp FSLH  &kp BSLH
                                &kp LCTRL  &kp SPACE  &lt 1 RET    &kp DEL  &kp BSPC  &kp LEFT_ALT
            >;
        };
    };
};
